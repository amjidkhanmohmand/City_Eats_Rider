// Mocks generated by Mockito 5.4.4 from annotations
// in rider/test/helpers/test_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i26;
import 'dart:io' as _i43;
import 'dart:ui' as _i27;

import 'package:device_info_plus/device_info_plus.dart' as _i18;
import 'package:dio/dio.dart' as _i22;
import 'package:file_picker/file_picker.dart' as _i42;
import 'package:flutter/material.dart' as _i25;
import 'package:flutter_local_notifications/flutter_local_notifications.dart'
    as _i19;
import 'package:geolocator/geolocator.dart' as _i47;
import 'package:google_maps_flutter/google_maps_flutter.dart' as _i48;
import 'package:image_picker/image_picker.dart' as _i21;
import 'package:logger/src/logger.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i24;
import 'package:rider/models/address_body.dart' as _i34;
import 'package:rider/models/auth_models/login_body.dart' as _i30;
import 'package:rider/models/auth_models/signup_body.dart' as _i29;
import 'package:rider/models/license_body.dart' as _i33;
import 'package:rider/models/location_body.dart' as _i31;
import 'package:rider/models/update_profile_body.dart' as _i35;
import 'package:rider/models/user_profile.dart' as _i40;
import 'package:rider/models/vehicle_details_body.dart' as _i32;
import 'package:rider/responses/active_order_response.dart' as _i15;
import 'package:rider/responses/address_response.dart' as _i14;
import 'package:rider/responses/auth_response.dart' as _i6;
import 'package:rider/responses/base_responses/base_response.dart' as _i5;
import 'package:rider/responses/base_responses/request_response.dart' as _i7;
import 'package:rider/responses/documents_response.dart' as _i12;
import 'package:rider/responses/earnings_response.dart' as _i16;
import 'package:rider/responses/order_response.dart' as _i10;
import 'package:rider/responses/profile_response.dart' as _i4;
import 'package:rider/responses/ratings_response.dart' as _i17;
import 'package:rider/responses/specific_order_response.dart' as _i11;
import 'package:rider/responses/vehicle_type.dart' as _i8;
import 'package:rider/responses/vehicles_response.dart' as _i13;
import 'package:rider/services/api_service.dart' as _i3;
import 'package:rider/services/auth_service.dart' as _i39;
import 'package:rider/services/config_service.dart' as _i38;
import 'package:rider/services/database_service.dart' as _i28;
import 'package:rider/services/device_info_service.dart' as _i36;
import 'package:rider/services/filepicker_service.dart' as _i41;
import 'package:rider/services/local_storage_service.dart' as _i44;
import 'package:rider/services/location_service.dart' as _i46;
import 'package:rider/services/notification_service.dart' as _i37;
import 'package:rider/services/token_interceptor_service.dart' as _i45;
import 'package:rider/services/update_profile_response.dart' as _i9;
import 'package:rxdart/rxdart.dart' as _i20;
import 'package:stacked_services/stacked_services.dart' as _i23;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLogger_0 extends _i1.SmartFake implements _i2.Logger {
  _FakeLogger_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApiService_1 extends _i1.SmartFake implements _i3.ApiService {
  _FakeApiService_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProfileResponse_2 extends _i1.SmartFake
    implements _i4.ProfileResponse {
  _FakeProfileResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseResponse_3 extends _i1.SmartFake implements _i5.BaseResponse {
  _FakeBaseResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthResponse_4 extends _i1.SmartFake implements _i6.AuthResponse {
  _FakeAuthResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRequestResponse_5 extends _i1.SmartFake
    implements _i7.RequestResponse {
  _FakeRequestResponse_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeVehicleTypeResponse_6 extends _i1.SmartFake
    implements _i8.VehicleTypeResponse {
  _FakeVehicleTypeResponse_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateProfileResponse_7 extends _i1.SmartFake
    implements _i9.UpdateProfileResponse {
  _FakeUpdateProfileResponse_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOrderResponse_8 extends _i1.SmartFake implements _i10.OrderResponse {
  _FakeOrderResponse_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSpecificOrderResponse_9 extends _i1.SmartFake
    implements _i11.SpecificOrderResponse {
  _FakeSpecificOrderResponse_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDocumentsResponse_10 extends _i1.SmartFake
    implements _i12.DocumentsResponse {
  _FakeDocumentsResponse_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeVehicleResponse_11 extends _i1.SmartFake
    implements _i13.VehicleResponse {
  _FakeVehicleResponse_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddressResponse_12 extends _i1.SmartFake
    implements _i14.AddressResponse {
  _FakeAddressResponse_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCurrentRideResponse_13 extends _i1.SmartFake
    implements _i15.CurrentRideResponse {
  _FakeCurrentRideResponse_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOrderModel_14 extends _i1.SmartFake implements _i10.OrderModel {
  _FakeOrderModel_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEarningsResponse_15 extends _i1.SmartFake
    implements _i16.EarningsResponse {
  _FakeEarningsResponse_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRatingsResponse_16 extends _i1.SmartFake
    implements _i17.RatingsResponse {
  _FakeRatingsResponse_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDeviceInfoPlugin_17 extends _i1.SmartFake
    implements _i18.DeviceInfoPlugin {
  _FakeDeviceInfoPlugin_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAndroidNotificationChannel_18 extends _i1.SmartFake
    implements _i19.AndroidNotificationChannel {
  _FakeAndroidNotificationChannel_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFlutterLocalNotificationsPlugin_19 extends _i1.SmartFake
    implements _i19.FlutterLocalNotificationsPlugin {
  _FakeFlutterLocalNotificationsPlugin_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBehaviorSubject_20<T> extends _i1.SmartFake
    implements _i20.BehaviorSubject<T> {
  _FakeBehaviorSubject_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeImagePicker_21 extends _i1.SmartFake implements _i21.ImagePicker {
  _FakeImagePicker_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDio_22 extends _i1.SmartFake implements _i22.Dio {
  _FakeDio_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i1.Mock implements _i23.NavigationService {
  @override
  String get previousRoute => (super.noSuchMethod(
        Invocation.getter(#previousRoute),
        returnValue: _i24.dummyValue<String>(
          this,
          Invocation.getter(#previousRoute),
        ),
        returnValueForMissingStub: _i24.dummyValue<String>(
          this,
          Invocation.getter(#previousRoute),
        ),
      ) as String);

  @override
  String get currentRoute => (super.noSuchMethod(
        Invocation.getter(#currentRoute),
        returnValue: _i24.dummyValue<String>(
          this,
          Invocation.getter(#currentRoute),
        ),
        returnValueForMissingStub: _i24.dummyValue<String>(
          this,
          Invocation.getter(#currentRoute),
        ),
      ) as String);

  @override
  _i25.GlobalKey<_i25.NavigatorState>? nestedNavigationKey(int? index) =>
      (super.noSuchMethod(
        Invocation.method(
          #nestedNavigationKey,
          [index],
        ),
        returnValueForMissingStub: null,
      ) as _i25.GlobalKey<_i25.NavigatorState>?);

  @override
  void config({
    bool? enableLog,
    bool? defaultPopGesture,
    bool? defaultOpaqueRoute,
    Duration? defaultDurationTransition,
    bool? defaultGlobalState,
    _i23.Transition? defaultTransitionStyle,
    String? defaultTransition,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #config,
          [],
          {
            #enableLog: enableLog,
            #defaultPopGesture: defaultPopGesture,
            #defaultOpaqueRoute: defaultOpaqueRoute,
            #defaultDurationTransition: defaultDurationTransition,
            #defaultGlobalState: defaultGlobalState,
            #defaultTransitionStyle: defaultTransitionStyle,
            #defaultTransition: defaultTransition,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i26.Future<T?>? navigateWithTransition<T>(
    _i25.Widget? page, {
    bool? opaque,
    String? transition = r'',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i25.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i23.Transition? transitionClass,
    _i23.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateWithTransition,
          [page],
          {
            #opaque: opaque,
            #transition: transition,
            #duration: duration,
            #popGesture: popGesture,
            #id: id,
            #curve: curve,
            #fullscreenDialog: fullscreenDialog,
            #preventDuplicates: preventDuplicates,
            #transitionClass: transitionClass,
            #transitionStyle: transitionStyle,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i26.Future<T?>?);

  @override
  _i26.Future<T?>? replaceWithTransition<T>(
    _i25.Widget? page, {
    bool? opaque,
    String? transition = r'',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i25.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i23.Transition? transitionClass,
    _i23.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWithTransition,
          [page],
          {
            #opaque: opaque,
            #transition: transition,
            #duration: duration,
            #popGesture: popGesture,
            #id: id,
            #curve: curve,
            #fullscreenDialog: fullscreenDialog,
            #preventDuplicates: preventDuplicates,
            #transitionClass: transitionClass,
            #transitionStyle: transitionStyle,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i26.Future<T?>?);

  @override
  bool back<T>({
    dynamic result,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #back,
          [],
          {
            #result: result,
            #id: id,
          },
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void popUntil(
    _i25.RoutePredicate? predicate, {
    int? id,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #popUntil,
          [predicate],
          {#id: id},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void popRepeated(int? popTimes) => super.noSuchMethod(
        Invocation.method(
          #popRepeated,
          [popTimes],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i26.Future<T?>? navigateTo<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i25.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateTo,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
            #transition: transition,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i26.Future<T?>?);

  @override
  _i26.Future<T?>? navigateToView<T>(
    _i25.Widget? view, {
    dynamic arguments,
    int? id,
    bool? opaque,
    _i25.Curve? curve,
    Duration? duration,
    bool? fullscreenDialog = false,
    bool? popGesture,
    bool? preventDuplicates = true,
    _i23.Transition? transition,
    _i23.Transition? transitionStyle,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToView,
          [view],
          {
            #arguments: arguments,
            #id: id,
            #opaque: opaque,
            #curve: curve,
            #duration: duration,
            #fullscreenDialog: fullscreenDialog,
            #popGesture: popGesture,
            #preventDuplicates: preventDuplicates,
            #transition: transition,
            #transitionStyle: transitionStyle,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i26.Future<T?>?);

  @override
  _i26.Future<T?>? replaceWith<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i25.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWith,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
            #transition: transition,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i26.Future<T?>?);

  @override
  _i26.Future<T?>? clearStackAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShow,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #parameters: parameters,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i26.Future<T?>?);

  @override
  _i26.Future<T?>? clearStackAndShowView<T>(
    _i25.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShowView,
          [view],
          {
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i26.Future<T?>?);

  @override
  _i26.Future<T?>? clearTillFirstAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearTillFirstAndShow,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i26.Future<T?>?);

  @override
  _i26.Future<T?>? clearTillFirstAndShowView<T>(
    _i25.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearTillFirstAndShowView,
          [view],
          {
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i26.Future<T?>?);

  @override
  _i26.Future<T?>? pushNamedAndRemoveUntil<T>(
    String? routeName, {
    _i25.RoutePredicate? predicate,
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushNamedAndRemoveUntil,
          [routeName],
          {
            #predicate: predicate,
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i26.Future<T?>?);
}

/// A class which mocks [BottomSheetService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBottomSheetService extends _i1.Mock
    implements _i23.BottomSheetService {
  @override
  void setCustomSheetBuilders(Map<dynamic, _i23.SheetBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #setCustomSheetBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i26.Future<_i23.SheetResponse<dynamic>?> showBottomSheet({
    required String? title,
    String? description,
    String? confirmButtonTitle = r'Ok',
    String? cancelButtonTitle,
    bool? enableDrag = true,
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showBottomSheet,
          [],
          {
            #title: title,
            #description: description,
            #confirmButtonTitle: confirmButtonTitle,
            #cancelButtonTitle: cancelButtonTitle,
            #enableDrag: enableDrag,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
          },
        ),
        returnValue: _i26.Future<_i23.SheetResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i26.Future<_i23.SheetResponse<dynamic>?>.value(),
      ) as _i26.Future<_i23.SheetResponse<dynamic>?>);

  @override
  _i26.Future<_i23.SheetResponse<T>?> showCustomSheet<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i27.Color? barrierColor = const _i27.Color(2315255808),
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    String? barrierLabel = r'',
    dynamic customData,
    R? data,
    bool? enableDrag = true,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomSheet,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #barrierLabel: barrierLabel,
            #customData: customData,
            #data: data,
            #enableDrag: enableDrag,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
          },
        ),
        returnValue: _i26.Future<_i23.SheetResponse<T>?>.value(),
        returnValueForMissingStub: _i26.Future<_i23.SheetResponse<T>?>.value(),
      ) as _i26.Future<_i23.SheetResponse<T>?>);

  @override
  void completeSheet(_i23.SheetResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeSheet,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DialogService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDialogService extends _i1.Mock implements _i23.DialogService {
  @override
  void registerCustomDialogBuilders(
          Map<dynamic, _i23.DialogBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void registerCustomDialogBuilder({
    required dynamic variant,
    required _i25.Widget Function(
      _i25.BuildContext,
      _i23.DialogRequest<dynamic>,
      dynamic Function(_i23.DialogResponse<dynamic>),
    )? builder,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilder,
          [],
          {
            #variant: variant,
            #builder: builder,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i26.Future<_i23.DialogResponse<dynamic>?> showDialog({
    String? title,
    String? description,
    String? cancelTitle,
    _i27.Color? cancelTitleColor,
    String? buttonTitle = r'Ok',
    _i27.Color? buttonTitleColor,
    bool? barrierDismissible = false,
    _i23.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #buttonTitle: buttonTitle,
            #buttonTitleColor: buttonTitleColor,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i26.Future<_i23.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i26.Future<_i23.DialogResponse<dynamic>?>.value(),
      ) as _i26.Future<_i23.DialogResponse<dynamic>?>);

  @override
  _i26.Future<_i23.DialogResponse<T>?> showCustomDialog<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i27.Color? barrierColor = const _i27.Color(2315255808),
    bool? barrierDismissible = false,
    String? barrierLabel = r'',
    bool? useSafeArea = true,
    dynamic customData,
    R? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomDialog,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #barrierDismissible: barrierDismissible,
            #barrierLabel: barrierLabel,
            #useSafeArea: useSafeArea,
            #customData: customData,
            #data: data,
          },
        ),
        returnValue: _i26.Future<_i23.DialogResponse<T>?>.value(),
        returnValueForMissingStub: _i26.Future<_i23.DialogResponse<T>?>.value(),
      ) as _i26.Future<_i23.DialogResponse<T>?>);

  @override
  _i26.Future<_i23.DialogResponse<dynamic>?> showConfirmationDialog({
    String? title,
    String? description,
    String? cancelTitle = r'Cancel',
    _i27.Color? cancelTitleColor,
    String? confirmationTitle = r'Ok',
    _i27.Color? confirmationTitleColor,
    bool? barrierDismissible = false,
    _i23.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showConfirmationDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #confirmationTitle: confirmationTitle,
            #confirmationTitleColor: confirmationTitleColor,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i26.Future<_i23.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i26.Future<_i23.DialogResponse<dynamic>?>.value(),
      ) as _i26.Future<_i23.DialogResponse<dynamic>?>);

  @override
  void completeDialog(_i23.DialogResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeDialog,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DatabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseService extends _i1.Mock implements _i28.DatabaseService {
  @override
  _i2.Logger get log => (super.noSuchMethod(
        Invocation.getter(#log),
        returnValue: _FakeLogger_0(
          this,
          Invocation.getter(#log),
        ),
        returnValueForMissingStub: _FakeLogger_0(
          this,
          Invocation.getter(#log),
        ),
      ) as _i2.Logger);

  @override
  set log(_i2.Logger? _log) => super.noSuchMethod(
        Invocation.setter(
          #log,
          _log,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.ApiService get apiServices => (super.noSuchMethod(
        Invocation.getter(#apiServices),
        returnValue: _FakeApiService_1(
          this,
          Invocation.getter(#apiServices),
        ),
        returnValueForMissingStub: _FakeApiService_1(
          this,
          Invocation.getter(#apiServices),
        ),
      ) as _i3.ApiService);

  @override
  _i26.Future<_i4.ProfileResponse> getUserProfile() => (super.noSuchMethod(
        Invocation.method(
          #getUserProfile,
          [],
        ),
        returnValue:
            _i26.Future<_i4.ProfileResponse>.value(_FakeProfileResponse_2(
          this,
          Invocation.method(
            #getUserProfile,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i26.Future<_i4.ProfileResponse>.value(_FakeProfileResponse_2(
          this,
          Invocation.method(
            #getUserProfile,
            [],
          ),
        )),
      ) as _i26.Future<_i4.ProfileResponse>);

  @override
  _i26.Future<_i5.BaseResponse> updateFcmToken(
    String? deviceId,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateFcmToken,
          [
            deviceId,
            token,
          ],
        ),
        returnValue: _i26.Future<_i5.BaseResponse>.value(_FakeBaseResponse_3(
          this,
          Invocation.method(
            #updateFcmToken,
            [
              deviceId,
              token,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i26.Future<_i5.BaseResponse>.value(_FakeBaseResponse_3(
          this,
          Invocation.method(
            #updateFcmToken,
            [
              deviceId,
              token,
            ],
          ),
        )),
      ) as _i26.Future<_i5.BaseResponse>);

  @override
  _i26.Future<_i5.BaseResponse> clearFcmToken(String? deviceId) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearFcmToken,
          [deviceId],
        ),
        returnValue: _i26.Future<_i5.BaseResponse>.value(_FakeBaseResponse_3(
          this,
          Invocation.method(
            #clearFcmToken,
            [deviceId],
          ),
        )),
        returnValueForMissingStub:
            _i26.Future<_i5.BaseResponse>.value(_FakeBaseResponse_3(
          this,
          Invocation.method(
            #clearFcmToken,
            [deviceId],
          ),
        )),
      ) as _i26.Future<_i5.BaseResponse>);

  @override
  _i26.Future<_i6.AuthResponse> createAccount(_i29.SignUpBody? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAccount,
          [body],
        ),
        returnValue: _i26.Future<_i6.AuthResponse>.value(_FakeAuthResponse_4(
          this,
          Invocation.method(
            #createAccount,
            [body],
          ),
        )),
        returnValueForMissingStub:
            _i26.Future<_i6.AuthResponse>.value(_FakeAuthResponse_4(
          this,
          Invocation.method(
            #createAccount,
            [body],
          ),
        )),
      ) as _i26.Future<_i6.AuthResponse>);

  @override
  _i26.Future<_i6.AuthResponse> loginWithEmailAndPassword(
          _i30.LoginBody? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginWithEmailAndPassword,
          [body],
        ),
        returnValue: _i26.Future<_i6.AuthResponse>.value(_FakeAuthResponse_4(
          this,
          Invocation.method(
            #loginWithEmailAndPassword,
            [body],
          ),
        )),
        returnValueForMissingStub:
            _i26.Future<_i6.AuthResponse>.value(_FakeAuthResponse_4(
          this,
          Invocation.method(
            #loginWithEmailAndPassword,
            [body],
          ),
        )),
      ) as _i26.Future<_i6.AuthResponse>);

  @override
  _i26.Future<_i7.RequestResponse> forgotPassword(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #forgotPassword,
          [email],
        ),
        returnValue:
            _i26.Future<_i7.RequestResponse>.value(_FakeRequestResponse_5(
          this,
          Invocation.method(
            #forgotPassword,
            [email],
          ),
        )),
        returnValueForMissingStub:
            _i26.Future<_i7.RequestResponse>.value(_FakeRequestResponse_5(
          this,
          Invocation.method(
            #forgotPassword,
            [email],
          ),
        )),
      ) as _i26.Future<_i7.RequestResponse>);

  @override
  _i26.Future<_i7.RequestResponse> resetPassword(
    String? otp,
    String? email,
    String? newPass,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPassword,
          [
            otp,
            email,
            newPass,
          ],
        ),
        returnValue:
            _i26.Future<_i7.RequestResponse>.value(_FakeRequestResponse_5(
          this,
          Invocation.method(
            #resetPassword,
            [
              otp,
              email,
              newPass,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i26.Future<_i7.RequestResponse>.value(_FakeRequestResponse_5(
          this,
          Invocation.method(
            #resetPassword,
            [
              otp,
              email,
              newPass,
            ],
          ),
        )),
      ) as _i26.Future<_i7.RequestResponse>);

  @override
  _i26.Future<dynamic> updateLocation(_i31.LocationBody? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLocation,
          [body],
        ),
        returnValue: _i26.Future<dynamic>.value(),
        returnValueForMissingStub: _i26.Future<dynamic>.value(),
      ) as _i26.Future<dynamic>);

  @override
  _i26.Future<_i6.AuthResponse> verifyOTP(
    String? email,
    String? otp,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyOTP,
          [
            email,
            otp,
          ],
        ),
        returnValue: _i26.Future<_i6.AuthResponse>.value(_FakeAuthResponse_4(
          this,
          Invocation.method(
            #verifyOTP,
            [
              email,
              otp,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i26.Future<_i6.AuthResponse>.value(_FakeAuthResponse_4(
          this,
          Invocation.method(
            #verifyOTP,
            [
              email,
              otp,
            ],
          ),
        )),
      ) as _i26.Future<_i6.AuthResponse>);

  @override
  _i26.Future<dynamic> generateOTP(String? email) => (super.noSuchMethod(
        Invocation.method(
          #generateOTP,
          [email],
        ),
        returnValue: _i26.Future<dynamic>.value(),
        returnValueForMissingStub: _i26.Future<dynamic>.value(),
      ) as _i26.Future<dynamic>);

  @override
  _i26.Future<dynamic> deleteAccount() => (super.noSuchMethod(
        Invocation.method(
          #deleteAccount,
          [],
        ),
        returnValue: _i26.Future<dynamic>.value(),
        returnValueForMissingStub: _i26.Future<dynamic>.value(),
      ) as _i26.Future<dynamic>);

  @override
  _i26.Future<dynamic> addVehicleDetails(_i32.VehicleDetails? details) =>
      (super.noSuchMethod(
        Invocation.method(
          #addVehicleDetails,
          [details],
        ),
        returnValue: _i26.Future<dynamic>.value(),
        returnValueForMissingStub: _i26.Future<dynamic>.value(),
      ) as _i26.Future<dynamic>);

  @override
  _i26.Future<dynamic> addIdentity(_i33.LicenseBody? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #addIdentity,
          [body],
        ),
        returnValue: _i26.Future<dynamic>.value(),
        returnValueForMissingStub: _i26.Future<dynamic>.value(),
      ) as _i26.Future<dynamic>);

  @override
  _i26.Future<_i8.VehicleTypeResponse> getVehicleType() => (super.noSuchMethod(
        Invocation.method(
          #getVehicleType,
          [],
        ),
        returnValue: _i26.Future<_i8.VehicleTypeResponse>.value(
            _FakeVehicleTypeResponse_6(
          this,
          Invocation.method(
            #getVehicleType,
            [],
          ),
        )),
        returnValueForMissingStub: _i26.Future<_i8.VehicleTypeResponse>.value(
            _FakeVehicleTypeResponse_6(
          this,
          Invocation.method(
            #getVehicleType,
            [],
          ),
        )),
      ) as _i26.Future<_i8.VehicleTypeResponse>);

  @override
  _i26.Future<dynamic> addAddress(_i34.Address? body) => (super.noSuchMethod(
        Invocation.method(
          #addAddress,
          [body],
        ),
        returnValue: _i26.Future<dynamic>.value(),
        returnValueForMissingStub: _i26.Future<dynamic>.value(),
      ) as _i26.Future<dynamic>);

  @override
  _i26.Future<dynamic> dispute(
    String? obj,
    String? title,
    String? desc,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #dispute,
          [
            obj,
            title,
            desc,
          ],
        ),
        returnValue: _i26.Future<dynamic>.value(),
        returnValueForMissingStub: _i26.Future<dynamic>.value(),
      ) as _i26.Future<dynamic>);

  @override
  _i26.Future<_i9.UpdateProfileResponse> updateProfile(
          _i35.UpdateProfileBody? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [body],
        ),
        returnValue: _i26.Future<_i9.UpdateProfileResponse>.value(
            _FakeUpdateProfileResponse_7(
          this,
          Invocation.method(
            #updateProfile,
            [body],
          ),
        )),
        returnValueForMissingStub: _i26.Future<_i9.UpdateProfileResponse>.value(
            _FakeUpdateProfileResponse_7(
          this,
          Invocation.method(
            #updateProfile,
            [body],
          ),
        )),
      ) as _i26.Future<_i9.UpdateProfileResponse>);

  @override
  _i26.Future<dynamic> changeMyPassword(
    String? oldPass,
    String? newPass,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeMyPassword,
          [
            oldPass,
            newPass,
          ],
        ),
        returnValue: _i26.Future<dynamic>.value(),
        returnValueForMissingStub: _i26.Future<dynamic>.value(),
      ) as _i26.Future<dynamic>);

  @override
  _i26.Future<_i10.OrderResponse> fetchMyOrders() => (super.noSuchMethod(
        Invocation.method(
          #fetchMyOrders,
          [],
        ),
        returnValue: _i26.Future<_i10.OrderResponse>.value(_FakeOrderResponse_8(
          this,
          Invocation.method(
            #fetchMyOrders,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i26.Future<_i10.OrderResponse>.value(_FakeOrderResponse_8(
          this,
          Invocation.method(
            #fetchMyOrders,
            [],
          ),
        )),
      ) as _i26.Future<_i10.OrderResponse>);

  @override
  _i26.Future<_i11.SpecificOrderResponse> fetchOrderDetails(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchOrderDetails,
          [id],
        ),
        returnValue: _i26.Future<_i11.SpecificOrderResponse>.value(
            _FakeSpecificOrderResponse_9(
          this,
          Invocation.method(
            #fetchOrderDetails,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i26.Future<_i11.SpecificOrderResponse>.value(
                _FakeSpecificOrderResponse_9(
          this,
          Invocation.method(
            #fetchOrderDetails,
            [id],
          ),
        )),
      ) as _i26.Future<_i11.SpecificOrderResponse>);

  @override
  _i26.Future<_i12.DocumentsResponse> fetchMyDocuments() => (super.noSuchMethod(
        Invocation.method(
          #fetchMyDocuments,
          [],
        ),
        returnValue:
            _i26.Future<_i12.DocumentsResponse>.value(_FakeDocumentsResponse_10(
          this,
          Invocation.method(
            #fetchMyDocuments,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i26.Future<_i12.DocumentsResponse>.value(_FakeDocumentsResponse_10(
          this,
          Invocation.method(
            #fetchMyDocuments,
            [],
          ),
        )),
      ) as _i26.Future<_i12.DocumentsResponse>);

  @override
  _i26.Future<dynamic> updateIdentity(_i33.LicenseBody? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateIdentity,
          [body],
        ),
        returnValue: _i26.Future<dynamic>.value(),
        returnValueForMissingStub: _i26.Future<dynamic>.value(),
      ) as _i26.Future<dynamic>);

  @override
  _i26.Future<_i13.VehicleResponse> fetchMyVehicle() => (super.noSuchMethod(
        Invocation.method(
          #fetchMyVehicle,
          [],
        ),
        returnValue:
            _i26.Future<_i13.VehicleResponse>.value(_FakeVehicleResponse_11(
          this,
          Invocation.method(
            #fetchMyVehicle,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i26.Future<_i13.VehicleResponse>.value(_FakeVehicleResponse_11(
          this,
          Invocation.method(
            #fetchMyVehicle,
            [],
          ),
        )),
      ) as _i26.Future<_i13.VehicleResponse>);

  @override
  _i26.Future<dynamic> updateVehicleDetails(_i32.VehicleDetails? details) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateVehicleDetails,
          [details],
        ),
        returnValue: _i26.Future<dynamic>.value(),
        returnValueForMissingStub: _i26.Future<dynamic>.value(),
      ) as _i26.Future<dynamic>);

  @override
  _i26.Future<_i14.AddressResponse> fetchMyAddress() => (super.noSuchMethod(
        Invocation.method(
          #fetchMyAddress,
          [],
        ),
        returnValue:
            _i26.Future<_i14.AddressResponse>.value(_FakeAddressResponse_12(
          this,
          Invocation.method(
            #fetchMyAddress,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i26.Future<_i14.AddressResponse>.value(_FakeAddressResponse_12(
          this,
          Invocation.method(
            #fetchMyAddress,
            [],
          ),
        )),
      ) as _i26.Future<_i14.AddressResponse>);

  @override
  _i26.Future<dynamic> updateAddress(_i34.Address? body) => (super.noSuchMethod(
        Invocation.method(
          #updateAddress,
          [body],
        ),
        returnValue: _i26.Future<dynamic>.value(),
        returnValueForMissingStub: _i26.Future<dynamic>.value(),
      ) as _i26.Future<dynamic>);

  @override
  _i26.Future<dynamic> updateAddressFromHome(
    double? lat,
    double? lng,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAddressFromHome,
          [
            lat,
            lng,
          ],
        ),
        returnValue: _i26.Future<dynamic>.value(),
        returnValueForMissingStub: _i26.Future<dynamic>.value(),
      ) as _i26.Future<dynamic>);

  @override
  _i26.Future<dynamic> onlineOffline(int? status) => (super.noSuchMethod(
        Invocation.method(
          #onlineOffline,
          [status],
        ),
        returnValue: _i26.Future<dynamic>.value(),
        returnValueForMissingStub: _i26.Future<dynamic>.value(),
      ) as _i26.Future<dynamic>);

  @override
  _i26.Future<dynamic> acceptOrder(int? id) => (super.noSuchMethod(
        Invocation.method(
          #acceptOrder,
          [id],
        ),
        returnValue: _i26.Future<dynamic>.value(),
        returnValueForMissingStub: _i26.Future<dynamic>.value(),
      ) as _i26.Future<dynamic>);

  @override
  _i26.Future<_i15.CurrentRideResponse> getCurrentRideInfo() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentRideInfo,
          [],
        ),
        returnValue: _i26.Future<_i15.CurrentRideResponse>.value(
            _FakeCurrentRideResponse_13(
          this,
          Invocation.method(
            #getCurrentRideInfo,
            [],
          ),
        )),
        returnValueForMissingStub: _i26.Future<_i15.CurrentRideResponse>.value(
            _FakeCurrentRideResponse_13(
          this,
          Invocation.method(
            #getCurrentRideInfo,
            [],
          ),
        )),
      ) as _i26.Future<_i15.CurrentRideResponse>);

  @override
  _i26.Future<_i10.OrderModel> updateRideStatus(
    int? orderId,
    String? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateRideStatus,
          [
            orderId,
            status,
          ],
        ),
        returnValue: _i26.Future<_i10.OrderModel>.value(_FakeOrderModel_14(
          this,
          Invocation.method(
            #updateRideStatus,
            [
              orderId,
              status,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i26.Future<_i10.OrderModel>.value(_FakeOrderModel_14(
          this,
          Invocation.method(
            #updateRideStatus,
            [
              orderId,
              status,
            ],
          ),
        )),
      ) as _i26.Future<_i10.OrderModel>);

  @override
  _i26.Future<_i7.RequestResponse> getHomeData() => (super.noSuchMethod(
        Invocation.method(
          #getHomeData,
          [],
        ),
        returnValue:
            _i26.Future<_i7.RequestResponse>.value(_FakeRequestResponse_5(
          this,
          Invocation.method(
            #getHomeData,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i26.Future<_i7.RequestResponse>.value(_FakeRequestResponse_5(
          this,
          Invocation.method(
            #getHomeData,
            [],
          ),
        )),
      ) as _i26.Future<_i7.RequestResponse>);

  @override
  _i26.Future<_i16.EarningsResponse> getEarnings() => (super.noSuchMethod(
        Invocation.method(
          #getEarnings,
          [],
        ),
        returnValue:
            _i26.Future<_i16.EarningsResponse>.value(_FakeEarningsResponse_15(
          this,
          Invocation.method(
            #getEarnings,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i26.Future<_i16.EarningsResponse>.value(_FakeEarningsResponse_15(
          this,
          Invocation.method(
            #getEarnings,
            [],
          ),
        )),
      ) as _i26.Future<_i16.EarningsResponse>);

  @override
  _i26.Future<_i17.RatingsResponse> getRatings() => (super.noSuchMethod(
        Invocation.method(
          #getRatings,
          [],
        ),
        returnValue:
            _i26.Future<_i17.RatingsResponse>.value(_FakeRatingsResponse_16(
          this,
          Invocation.method(
            #getRatings,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i26.Future<_i17.RatingsResponse>.value(_FakeRatingsResponse_16(
          this,
          Invocation.method(
            #getRatings,
            [],
          ),
        )),
      ) as _i26.Future<_i17.RatingsResponse>);

  @override
  _i26.Future<_i17.RatingsResponse> getRequestOrder() => (super.noSuchMethod(
        Invocation.method(
          #getRequestOrder,
          [],
        ),
        returnValue:
            _i26.Future<_i17.RatingsResponse>.value(_FakeRatingsResponse_16(
          this,
          Invocation.method(
            #getRequestOrder,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i26.Future<_i17.RatingsResponse>.value(_FakeRatingsResponse_16(
          this,
          Invocation.method(
            #getRequestOrder,
            [],
          ),
        )),
      ) as _i26.Future<_i17.RatingsResponse>);
}

/// A class which mocks [DeviceInfoService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeviceInfoService extends _i1.Mock implements _i36.DeviceInfoService {
  @override
  _i18.DeviceInfoPlugin get deviceInfo => (super.noSuchMethod(
        Invocation.getter(#deviceInfo),
        returnValue: _FakeDeviceInfoPlugin_17(
          this,
          Invocation.getter(#deviceInfo),
        ),
        returnValueForMissingStub: _FakeDeviceInfoPlugin_17(
          this,
          Invocation.getter(#deviceInfo),
        ),
      ) as _i18.DeviceInfoPlugin);

  @override
  _i26.Future<String?> getDeviceId() => (super.noSuchMethod(
        Invocation.method(
          #getDeviceId,
          [],
        ),
        returnValue: _i26.Future<String?>.value(),
        returnValueForMissingStub: _i26.Future<String?>.value(),
      ) as _i26.Future<String?>);
}

/// A class which mocks [NotificationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationService extends _i1.Mock
    implements _i37.NotificationService {
  @override
  _i2.Logger get log => (super.noSuchMethod(
        Invocation.getter(#log),
        returnValue: _FakeLogger_0(
          this,
          Invocation.getter(#log),
        ),
        returnValueForMissingStub: _FakeLogger_0(
          this,
          Invocation.getter(#log),
        ),
      ) as _i2.Logger);

  @override
  set fcmToken(String? _fcmToken) => super.noSuchMethod(
        Invocation.setter(
          #fcmToken,
          _fcmToken,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.AndroidNotificationChannel get channel => (super.noSuchMethod(
        Invocation.getter(#channel),
        returnValue: _FakeAndroidNotificationChannel_18(
          this,
          Invocation.getter(#channel),
        ),
        returnValueForMissingStub: _FakeAndroidNotificationChannel_18(
          this,
          Invocation.getter(#channel),
        ),
      ) as _i19.AndroidNotificationChannel);

  @override
  set channel(_i19.AndroidNotificationChannel? _channel) => super.noSuchMethod(
        Invocation.setter(
          #channel,
          _channel,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.FlutterLocalNotificationsPlugin get flutterLocalNotificationsPlugin =>
      (super.noSuchMethod(
        Invocation.getter(#flutterLocalNotificationsPlugin),
        returnValue: _FakeFlutterLocalNotificationsPlugin_19(
          this,
          Invocation.getter(#flutterLocalNotificationsPlugin),
        ),
        returnValueForMissingStub: _FakeFlutterLocalNotificationsPlugin_19(
          this,
          Invocation.getter(#flutterLocalNotificationsPlugin),
        ),
      ) as _i19.FlutterLocalNotificationsPlugin);

  @override
  set flutterLocalNotificationsPlugin(
          _i19.FlutterLocalNotificationsPlugin?
              _flutterLocalNotificationsPlugin) =>
      super.noSuchMethod(
        Invocation.setter(
          #flutterLocalNotificationsPlugin,
          _flutterLocalNotificationsPlugin,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get type => (super.noSuchMethod(
        Invocation.getter(#type),
        returnValue: _i24.dummyValue<String>(
          this,
          Invocation.getter(#type),
        ),
        returnValueForMissingStub: _i24.dummyValue<String>(
          this,
          Invocation.getter(#type),
        ),
      ) as String);

  @override
  set type(String? _type) => super.noSuchMethod(
        Invocation.setter(
          #type,
          _type,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.OrderModel get order => (super.noSuchMethod(
        Invocation.getter(#order),
        returnValue: _FakeOrderModel_14(
          this,
          Invocation.getter(#order),
        ),
        returnValueForMissingStub: _FakeOrderModel_14(
          this,
          Invocation.getter(#order),
        ),
      ) as _i10.OrderModel);

  @override
  set order(_i10.OrderModel? _order) => super.noSuchMethod(
        Invocation.setter(
          #order,
          _order,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i20.BehaviorSubject<_i37.ReceivedNotification>
      get didReceivedLocalNotificationSubject => (super.noSuchMethod(
            Invocation.getter(#didReceivedLocalNotificationSubject),
            returnValue: _FakeBehaviorSubject_20<_i37.ReceivedNotification>(
              this,
              Invocation.getter(#didReceivedLocalNotificationSubject),
            ),
            returnValueForMissingStub:
                _FakeBehaviorSubject_20<_i37.ReceivedNotification>(
              this,
              Invocation.getter(#didReceivedLocalNotificationSubject),
            ),
          ) as _i20.BehaviorSubject<_i37.ReceivedNotification>);

  @override
  bool get isDialogOpen => (super.noSuchMethod(
        Invocation.getter(#isDialogOpen),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isDialogOpen(bool? _isDialogOpen) => super.noSuchMethod(
        Invocation.setter(
          #isDialogOpen,
          _isDialogOpen,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i26.Future<String?> getFcmToken() => (super.noSuchMethod(
        Invocation.method(
          #getFcmToken,
          [],
        ),
        returnValue: _i26.Future<String?>.value(),
        returnValueForMissingStub: _i26.Future<String?>.value(),
      ) as _i26.Future<String?>);
}

/// A class which mocks [ConfigService].
///
/// See the documentation for Mockito's code generation for more information.
class MockConfigService extends _i1.Mock implements _i38.ConfigService {
  @override
  _i2.Logger get log => (super.noSuchMethod(
        Invocation.getter(#log),
        returnValue: _FakeLogger_0(
          this,
          Invocation.getter(#log),
        ),
        returnValueForMissingStub: _FakeLogger_0(
          this,
          Invocation.getter(#log),
        ),
      ) as _i2.Logger);

  @override
  String get env => (super.noSuchMethod(
        Invocation.getter(#env),
        returnValue: _i24.dummyValue<String>(
          this,
          Invocation.getter(#env),
        ),
        returnValueForMissingStub: _i24.dummyValue<String>(
          this,
          Invocation.getter(#env),
        ),
      ) as String);

  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: _i24.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
        returnValueForMissingStub: _i24.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
      ) as String);
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i39.AuthService {
  @override
  set fcmToken(String? _fcmToken) => super.noSuchMethod(
        Invocation.setter(
          #fcmToken,
          _fcmToken,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set userProfile(_i40.UserProfile? _userProfile) => super.noSuchMethod(
        Invocation.setter(
          #userProfile,
          _userProfile,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set login(dynamic val) => super.noSuchMethod(
        Invocation.setter(
          #login,
          val,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  _i26.Future<void> doSetup() => (super.noSuchMethod(
        Invocation.method(
          #doSetup,
          [],
        ),
        returnValue: _i26.Future<void>.value(),
        returnValueForMissingStub: _i26.Future<void>.value(),
      ) as _i26.Future<void>);

  @override
  _i26.Future<_i6.AuthResponse> signUpWithEmailAndPassword(
          _i29.SignUpBody? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUpWithEmailAndPassword,
          [body],
        ),
        returnValue: _i26.Future<_i6.AuthResponse>.value(_FakeAuthResponse_4(
          this,
          Invocation.method(
            #signUpWithEmailAndPassword,
            [body],
          ),
        )),
        returnValueForMissingStub:
            _i26.Future<_i6.AuthResponse>.value(_FakeAuthResponse_4(
          this,
          Invocation.method(
            #signUpWithEmailAndPassword,
            [body],
          ),
        )),
      ) as _i26.Future<_i6.AuthResponse>);

  @override
  _i26.Future<_i6.AuthResponse> loginWithEmailAndPassword(
          _i30.LoginBody? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginWithEmailAndPassword,
          [body],
        ),
        returnValue: _i26.Future<_i6.AuthResponse>.value(_FakeAuthResponse_4(
          this,
          Invocation.method(
            #loginWithEmailAndPassword,
            [body],
          ),
        )),
        returnValueForMissingStub:
            _i26.Future<_i6.AuthResponse>.value(_FakeAuthResponse_4(
          this,
          Invocation.method(
            #loginWithEmailAndPassword,
            [body],
          ),
        )),
      ) as _i26.Future<_i6.AuthResponse>);

  @override
  _i26.Future<bool> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i26.Future<bool>.value(false),
        returnValueForMissingStub: _i26.Future<bool>.value(false),
      ) as _i26.Future<bool>);

  @override
  _i26.Future<dynamic> deleteAccount() => (super.noSuchMethod(
        Invocation.method(
          #deleteAccount,
          [],
        ),
        returnValue: _i26.Future<dynamic>.value(),
        returnValueForMissingStub: _i26.Future<dynamic>.value(),
      ) as _i26.Future<dynamic>);

  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [FilepickerService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFilepickerService extends _i1.Mock implements _i41.FilepickerService {
  @override
  _i2.Logger get log => (super.noSuchMethod(
        Invocation.getter(#log),
        returnValue: _FakeLogger_0(
          this,
          Invocation.getter(#log),
        ),
        returnValueForMissingStub: _FakeLogger_0(
          this,
          Invocation.getter(#log),
        ),
      ) as _i2.Logger);

  @override
  _i21.ImagePicker get imgpicker => (super.noSuchMethod(
        Invocation.getter(#imgpicker),
        returnValue: _FakeImagePicker_21(
          this,
          Invocation.getter(#imgpicker),
        ),
        returnValueForMissingStub: _FakeImagePicker_21(
          this,
          Invocation.getter(#imgpicker),
        ),
      ) as _i21.ImagePicker);

  @override
  _i26.Future<List<_i42.PlatformFile>?> pickMultipleFiles() =>
      (super.noSuchMethod(
        Invocation.method(
          #pickMultipleFiles,
          [],
        ),
        returnValue: _i26.Future<List<_i42.PlatformFile>?>.value(),
        returnValueForMissingStub:
            _i26.Future<List<_i42.PlatformFile>?>.value(),
      ) as _i26.Future<List<_i42.PlatformFile>?>);

  @override
  _i26.Future<List<_i21.XFile>?> pickMultiImages({
    int? imageQuality,
    double? maxHeight,
    double? maxWidth,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickMultiImages,
          [],
          {
            #imageQuality: imageQuality,
            #maxHeight: maxHeight,
            #maxWidth: maxWidth,
          },
        ),
        returnValue: _i26.Future<List<_i21.XFile>?>.value(),
        returnValueForMissingStub: _i26.Future<List<_i21.XFile>?>.value(),
      ) as _i26.Future<List<_i21.XFile>?>);

  @override
  _i26.Future<_i21.XFile?> pickSingleImage({
    _i21.ImageSource? imageSource,
    int? imageQuality,
    double? maxHeight,
    double? maxWidth,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickSingleImage,
          [],
          {
            #imageSource: imageSource,
            #imageQuality: imageQuality,
            #maxHeight: maxHeight,
            #maxWidth: maxWidth,
          },
        ),
        returnValue: _i26.Future<_i21.XFile?>.value(),
        returnValueForMissingStub: _i26.Future<_i21.XFile?>.value(),
      ) as _i26.Future<_i21.XFile?>);

  @override
  _i26.Future<_i43.File?> pickPdfFile() => (super.noSuchMethod(
        Invocation.method(
          #pickPdfFile,
          [],
        ),
        returnValue: _i26.Future<_i43.File?>.value(),
        returnValueForMissingStub: _i26.Future<_i43.File?>.value(),
      ) as _i26.Future<_i43.File?>);
}

/// A class which mocks [LocalStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalStorageService extends _i1.Mock
    implements _i44.LocalStorageService {
  @override
  _i2.Logger get log => (super.noSuchMethod(
        Invocation.getter(#log),
        returnValue: _FakeLogger_0(
          this,
          Invocation.getter(#log),
        ),
        returnValueForMissingStub: _FakeLogger_0(
          this,
          Invocation.getter(#log),
        ),
      ) as _i2.Logger);

  @override
  bool get onBoarding => (super.noSuchMethod(
        Invocation.getter(#onBoarding),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set setOnBoarded(bool? board) => super.noSuchMethod(
        Invocation.setter(
          #setOnBoarded,
          board,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get setNotificationsCount => (super.noSuchMethod(
        Invocation.getter(#setNotificationsCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  set setNotificationsCount(int? count) => super.noSuchMethod(
        Invocation.setter(
          #setNotificationsCount,
          count,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set accessToken(dynamic token) => super.noSuchMethod(
        Invocation.setter(
          #accessToken,
          token,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set setLocale(String? locale) => super.noSuchMethod(
        Invocation.setter(
          #setLocale,
          locale,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set setPaymentIntentId(String? id) => super.noSuchMethod(
        Invocation.setter(
          #setPaymentIntentId,
          id,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set setTransactionId(String? id) => super.noSuchMethod(
        Invocation.setter(
          #setTransactionId,
          id,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set setPaymentIntent(dynamic payment) => super.noSuchMethod(
        Invocation.setter(
          #setPaymentIntent,
          payment,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set setTransaction(dynamic trans) => super.noSuchMethod(
        Invocation.setter(
          #setTransaction,
          trans,
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i3.ApiService {
  @override
  _i2.Logger get log => (super.noSuchMethod(
        Invocation.getter(#log),
        returnValue: _FakeLogger_0(
          this,
          Invocation.getter(#log),
        ),
        returnValueForMissingStub: _FakeLogger_0(
          this,
          Invocation.getter(#log),
        ),
      ) as _i2.Logger);

  @override
  _i26.Future<_i22.Dio> launchDio() => (super.noSuchMethod(
        Invocation.method(
          #launchDio,
          [],
        ),
        returnValue: _i26.Future<_i22.Dio>.value(_FakeDio_22(
          this,
          Invocation.method(
            #launchDio,
            [],
          ),
        )),
        returnValueForMissingStub: _i26.Future<_i22.Dio>.value(_FakeDio_22(
          this,
          Invocation.method(
            #launchDio,
            [],
          ),
        )),
      ) as _i26.Future<_i22.Dio>);

  @override
  dynamic get({
    required String? endPoint,
    dynamic params,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #get,
          [],
          {
            #endPoint: endPoint,
            #params: params,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic post({
    required String? endPoint,
    dynamic data,
    dynamic queryParameters,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #post,
          [],
          {
            #endPoint: endPoint,
            #data: data,
            #queryParameters: queryParameters,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic put({
    required String? endPoint,
    dynamic data,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #put,
          [],
          {
            #endPoint: endPoint,
            #data: data,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic delete({
    required String? endPoint,
    dynamic params,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {
            #endPoint: endPoint,
            #params: params,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic getResponse(_i22.Response<dynamic>? response) => super.noSuchMethod(
        Invocation.method(
          #getResponse,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [TokenInterceptorService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTokenInterceptorService extends _i1.Mock
    implements _i45.TokenInterceptorService {
  @override
  _i2.Logger get log => (super.noSuchMethod(
        Invocation.getter(#log),
        returnValue: _FakeLogger_0(
          this,
          Invocation.getter(#log),
        ),
        returnValueForMissingStub: _FakeLogger_0(
          this,
          Invocation.getter(#log),
        ),
      ) as _i2.Logger);

  @override
  set requestOptions(_i22.RequestOptions? _requestOptions) =>
      super.noSuchMethod(
        Invocation.setter(
          #requestOptions,
          _requestOptions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i26.Future<dynamic> onRequest(
    _i22.RequestOptions? options,
    _i22.RequestInterceptorHandler? handler,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #onRequest,
          [
            options,
            handler,
          ],
        ),
        returnValue: _i26.Future<dynamic>.value(),
        returnValueForMissingStub: _i26.Future<dynamic>.value(),
      ) as _i26.Future<dynamic>);

  @override
  _i26.Future<dynamic> onResponse(
    _i22.Response<dynamic>? response,
    _i22.ResponseInterceptorHandler? handler,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #onResponse,
          [
            response,
            handler,
          ],
        ),
        returnValue: _i26.Future<dynamic>.value(),
        returnValueForMissingStub: _i26.Future<dynamic>.value(),
      ) as _i26.Future<dynamic>);

  @override
  void onError(
    _i22.DioException? err,
    _i22.ErrorInterceptorHandler? handler,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            err,
            handler,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [LocationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocationService extends _i1.Mock implements _i46.LocationService {
  @override
  _i2.Logger get log => (super.noSuchMethod(
        Invocation.getter(#log),
        returnValue: _FakeLogger_0(
          this,
          Invocation.getter(#log),
        ),
        returnValueForMissingStub: _FakeLogger_0(
          this,
          Invocation.getter(#log),
        ),
      ) as _i2.Logger);

  @override
  set currentLocation(_i47.Position? _currentLocation) => super.noSuchMethod(
        Invocation.setter(
          #currentLocation,
          _currentLocation,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set latitude(double? _latitude) => super.noSuchMethod(
        Invocation.setter(
          #latitude,
          _latitude,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set longitude(double? _longitude) => super.noSuchMethod(
        Invocation.setter(
          #longitude,
          _longitude,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i26.Future<_i47.Position?> getCurrentLocation() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentLocation,
          [],
        ),
        returnValue: _i26.Future<_i47.Position?>.value(),
        returnValueForMissingStub: _i26.Future<_i47.Position?>.value(),
      ) as _i26.Future<_i47.Position?>);

  @override
  double calculateDistance(
    _i46.GeoLocation? location1,
    _i46.GeoLocation? location2,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #calculateDistance,
          [
            location1,
            location2,
          ],
        ),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  dynamic findDistance({
    required _i46.GeoLocation? location1,
    required _i46.GeoLocation? location2,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #findDistance,
          [],
          {
            #location1: location1,
            #location2: location2,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i26.Future<_i31.LocationBody?> getAddressFromLatLng(_i48.LatLng? location) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAddressFromLatLng,
          [location],
        ),
        returnValue: _i26.Future<_i31.LocationBody?>.value(),
        returnValueForMissingStub: _i26.Future<_i31.LocationBody?>.value(),
      ) as _i26.Future<_i31.LocationBody?>);

  @override
  dynamic calculateDurationText(
    String? origin,
    String? destination,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #calculateDurationText,
          [
            origin,
            destination,
          ],
        ),
        returnValueForMissingStub: null,
      );
}
